c
@client.calls.create( to: to, from: ENV["phone_number"], url: "http://demo.twilio.com/docs/voice.xml")
@client.calls.create(url: "http://demo.twilio.com/docs/voice.xml")
@client.calls.create( form: ENV["phone_number"], url: "http://demo.twilio.com/docs/voice.xml")
@client.calls.create( to: to, url: "http://demo.twilio.com/docs/voice.xml")
@client.calls.create( to: to, form: ENV["phone_number"], url: "http://demo.twilio.com/docs/voice.xml")
@client.calls.create( form: ENV["phone_number"], to: to, url: "http://demo.twilio.com/docs/voice.xml")
c
to 
ENV["phone_number"]
c
call
call.id
call.sid
c
call = @client.calls.create(
   26: 				form: ENV["phone_number"],
   27: 				to: to,
   28: 				url: "http://demo.twilio.com/docs/voice.xml")
   29: 			puts call.to
call
puts call.to
to 
ENV["phone_number"]
c
to 
c
ENV["phone_number"]
to
c
call
n
c
flash[:notice]
response.body
response
c
flash[:notice]
response
@post.reload
response.body
c
params: {id: @post.id, post: {title: "Xyz"} }
params
@post.id
c
response.body
c
response.body
response
c
post_params
c
@post
n
c
@post = Post.new(post_params)
c
post :create, params: {post: post_params}
post_params = FactoryBot.attributes_for(:post)
post :create , params: @post
@post
c
customer.id
c
expect(flash[:notice]).to eq("Customer was successfully updated.")
n
expect(customer.name).to eq("Update Name")
expect(response).to redirect_to(customer_path(customer))
expect(response).to redirect_to(customer_url(@customer))
response.body
response
 customer.reload
n
c
customer
customer.id
c
customer.id
c
 customer.id
id: customer.id
c
customer.id
n
c
customer.id
valid_params
params
customer.id
c
customer.id
c
valid_params
c
expect(customer.qrcode.attached?).to be_truthy
customer.save!
expect(customer.qrcode.attached?).to be_falsy
customer.qrcode.attached?
c
customer.qrcode.download
customer.qrcode
customer
c
n
c
n
c
expect(generate_qr_code).to receive(:qr_data)
response
